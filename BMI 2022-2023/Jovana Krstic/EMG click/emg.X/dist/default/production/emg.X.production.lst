

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed May 31 11:12:07 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F87K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    36   000000                     
    37                           ; Version 2.35
    38                           ; Generated 05/05/2021 GMT
    39                           ; 
    40                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F87K22 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72   000000                     
    73 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    74   000000                     
    75 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    76   000000                     
    77 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    78   000000                     _TMR0L	set	4054
    79   000000                     _TMR0H	set	4055
    80   000000                     _T0CONbits	set	4053
    81   000000                     _TRISD	set	3989
    82   000000                     _TRISC	set	3988
    83   000000                     _TRISB	set	3987
    84   000000                     _LATC	set	3979
    85   000000                     _LATB	set	3978
    86   000000                     _TXREG1	set	4013
    87   000000                     _RCREG1	set	4014
    88   000000                     _SPBRGH1	set	4052
    89   000000                     _SPBRG1	set	4015
    90   000000                     _TXSTA1	set	4012
    91   000000                     _ADRESL	set	4035
    92   000000                     _ADRESH	set	4036
    93                           
    94                           	psect	nvCOMRAM
    95   000001                     __pnvCOMRAM:
    96                           	callstack 0
    97   000001                     _TMR0_InterruptHandler:
    98                           	callstack 0
    99   000001                     	ds	3
   100   000004                     _EUSART1_ErrorHandler:
   101                           	callstack 0
   102   000004                     	ds	3
   103   000007                     _EUSART1_OverrunErrorHandler:
   104                           	callstack 0
   105   000007                     	ds	3
   106   00000A                     _EUSART1_FramingErrorHandler:
   107                           	callstack 0
   108   00000A                     	ds	3
   109   00000D                     _ADC_InterruptHandler:
   110                           	callstack 0
   111   00000D                     	ds	3
   112   000010                     _timer0ReloadVal:
   113                           	callstack 0
   114   000010                     	ds	2
   115   000000                     _T0CON	set	4053
   116   000000                     _RCSTA1bits	set	4011
   117   000000                     _TXSTA1bits	set	4012
   118   000000                     _ADCON0bits	set	4034
   119   000000                     _ANCON2	set	3875
   120   000000                     _ANCON1	set	3876
   121   000000                     _ANCON0	set	3877
   122   000000                     _REFOCON	set	3882
   123   000000                     _OSCCON2	set	3940
   124   000000                     _PIE1bits	set	3997
   125   000000                     _ADCON2	set	4032
   126   000000                     _ADCON1	set	4033
   127   000000                     _ADCON0	set	4034
   128   000000                     _RCONbits	set	4048
   129   000000                     _RCSTA1	set	4011
   130   000000                     _PIR1bits	set	3998
   131   000000                     _OSCCON	set	4051
   132   000000                     _INTCONbits	set	4082
   133   000000                     _LATA	set	3977
   134   000000                     _LATD	set	3980
   135   000000                     _LATE	set	3981
   136   000000                     _BAUDCON1	set	3941
   137   000000                     _OSCTUNE	set	3995
   138   000000                     _TRISA	set	3986
   139   000000                     _TRISE	set	3990
   140   000000                     _LATH	set	3984
   141   000000                     _LATG	set	3983
   142   000000                     _LATF	set	3982
   143   000000                     _TRISH	set	3993
   144   000000                     _TRISG	set	3992
   145   000000                     _TRISF	set	3991
   146                           
   147                           ; #config settings
   148                           
   149                           	psect	cinit
   150   0002B6                     __pcinit:
   151                           	callstack 0
   152   0002B6                     start_initialization:
   153                           	callstack 0
   154   0002B6                     __initialization:
   155                           	callstack 0
   156                           
   157                           ; Clear objects allocated to COMRAM (4 bytes)
   158   0002B6  6A1C               	clrf	(__pbssCOMRAM+3)& (0+255),c
   159   0002B8  6A1B               	clrf	(__pbssCOMRAM+2)& (0+255),c
   160   0002BA  6A1A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   161   0002BC  6A19               	clrf	__pbssCOMRAM& (0+255),c
   162   0002BE                     end_of_initialization:
   163                           	callstack 0
   164   0002BE                     __end_of__initialization:
   165                           	callstack 0
   166   0002BE  901D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   167   0002C0  921D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   168   0002C2  0100               	movlb	0
   169   0002C4  EF3C  F000         	goto	_main	;jump to C main() function
   170                           
   171                           	psect	bssCOMRAM
   172   000019                     __pbssCOMRAM:
   173                           	callstack 0
   174   000019                     _emg_data:
   175                           	callstack 0
   176   000019                     	ds	2
   177   00001B                     _tmr0_flag:
   178                           	callstack 0
   179   00001B                     	ds	1
   180   00001C                     _eusart1RxLastError:
   181                           	callstack 0
   182   00001C                     	ds	1
   183                           
   184                           	psect	cstackCOMRAM
   185   000012                     __pcstackCOMRAM:
   186                           	callstack 0
   187   000012                     ??_INTERRUPT_InterruptManager:
   188   000012                     
   189                           ; 1 bytes @ 0x0
   190   000012                     	ds	2
   191   000014                     ??_ADC_StartConversion:
   192   000014                     ?_ADC_GetConversion:
   193                           	callstack 0
   194   000014                     EUSART1_Write@txData:
   195                           	callstack 0
   196   000014                     ADC_SetInterruptHandler@InterruptHandler:
   197                           	callstack 0
   198   000014                     EUSART1_SetFramingErrorHandler@interruptHandler:
   199                           	callstack 0
   200   000014                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   201                           	callstack 0
   202   000014                     EUSART1_SetErrorHandler@interruptHandler:
   203                           	callstack 0
   204   000014                     TMR0_SetInterruptHandler@InterruptHandler:
   205                           	callstack 0
   206                           
   207                           ; 3 bytes @ 0x2
   208   000014                     	ds	1
   209   000015                     ADC_StartConversion@channel:
   210                           	callstack 0
   211                           
   212                           ; 1 bytes @ 0x3
   213   000015                     	ds	1
   214   000016                     ??_ADC_GetConversion:
   215                           
   216                           ; 1 bytes @ 0x4
   217   000016                     	ds	1
   218   000017                     ??_TMR0_Initialize:
   219   000017                     
   220                           ; 1 bytes @ 0x5
   221   000017                     	ds	1
   222   000018                     ADC_GetConversion@channel:
   223                           	callstack 0
   224                           
   225                           ; 1 bytes @ 0x6
   226   000018                     	ds	1
   227   000019                     
   228                           ; 1 bytes @ 0x7
   229 ;;
   230 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   231 ;;
   232 ;; *************** function _main *****************
   233 ;; Defined at:
   234 ;;		line 54 in file "main.c"
   235 ;; Parameters:    Size  Location     Type
   236 ;;		None
   237 ;; Auto vars:     Size  Location     Type
   238 ;;		None
   239 ;; Return value:  Size  Location     Type
   240 ;;                  1    wreg      void 
   241 ;; Registers used:
   242 ;;		wreg, status,2, status,0, cstack
   243 ;; Tracked objects:
   244 ;;		On entry : 0/0
   245 ;;		On exit  : 0/0
   246 ;;		Unchanged: 0/0
   247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   252 ;;Total ram usage:        0 bytes
   253 ;; Hardware stack levels required when called: 6
   254 ;; This function calls:
   255 ;;		_ADC_GetConversion
   256 ;;		_ADC_StartConversion
   257 ;;		_EUSART1_Write
   258 ;;		_SYSTEM_Initialize
   259 ;; This function is called by:
   260 ;;		Startup code after reset
   261 ;; This function uses a non-reentrant model
   262 ;;
   263                           
   264                           	psect	text0
   265   000078                     __ptext0:
   266                           	callstack 0
   267   000078                     _main:
   268                           	callstack 25
   269   000078                     
   270                           ;main.c: 57:     SYSTEM_Initialize();
   271   000078  EC2C  F001         	call	_SYSTEM_Initialize	;wreg free
   272   00007C                     
   273                           ;main.c: 60:     (INTCONbits.GIE = 1);
   274   00007C  8EF2               	bsf	242,7,c	;volatile
   275                           
   276                           ;main.c: 62:     ADC_StartConversion(channel_AN0);
   277   00007E  0E00               	movlw	0
   278   000080  EC39  F001         	call	_ADC_StartConversion
   279   000084                     l1326:
   280                           
   281                           ;main.c: 65:     {;main.c: 66:         if(tmr0_flag){
   282   000084  501B               	movf	_tmr0_flag^0,w,c	;volatile
   283   000086  B4D8               	btfsc	status,2,c
   284   000088  EF48  F000         	goto	u261
   285   00008C  EF4A  F000         	goto	u260
   286   000090                     u261:
   287   000090  EF42  F000         	goto	l1326
   288   000094                     u260:
   289   000094                     
   290                           ;main.c: 67:             tmr0_flag = 0;
   291   000094  0E00               	movlw	0
   292   000096  6E1B               	movwf	_tmr0_flag^0,c	;volatile
   293   000098                     
   294                           ;main.c: 69:             emg_data = ADC_GetConversion(channel_AN0);
   295   000098  0E00               	movlw	0
   296   00009A  ECC5  F000         	call	_ADC_GetConversion
   297   00009E  C014  F019         	movff	?_ADC_GetConversion,_emg_data
   298   0000A2  C015  F01A         	movff	?_ADC_GetConversion+1,_emg_data+1
   299   0000A6                     
   300                           ;main.c: 71:             EUSART1_Write(0x03);
   301   0000A6  0E03               	movlw	3
   302   0000A8  EC46  F001         	call	_EUSART1_Write
   303   0000AC                     
   304                           ;main.c: 72:             EUSART1_Write((uint8_t)emg_data);
   305   0000AC  5019               	movf	_emg_data^0,w,c
   306   0000AE  EC46  F001         	call	_EUSART1_Write
   307   0000B2                     
   308                           ;main.c: 73:             EUSART1_Write(emg_data>>8);
   309   0000B2  501A               	movf	(_emg_data+1)^0,w,c
   310   0000B4  EC46  F001         	call	_EUSART1_Write
   311   0000B8                     
   312                           ;main.c: 74:             EUSART1_Write(0xFC);
   313   0000B8  0EFC               	movlw	252
   314   0000BA  EC46  F001         	call	_EUSART1_Write
   315   0000BE  EF42  F000         	goto	l1326
   316   0000C2  EF3A  F000         	goto	start
   317   0000C6                     __end_of_main:
   318                           	callstack 0
   319                           
   320 ;; *************** function _SYSTEM_Initialize *****************
   321 ;; Defined at:
   322 ;;		line 50 in file "mcc_generated_files/mcc.c"
   323 ;; Parameters:    Size  Location     Type
   324 ;;		None
   325 ;; Auto vars:     Size  Location     Type
   326 ;;		None
   327 ;; Return value:  Size  Location     Type
   328 ;;                  1    wreg      void 
   329 ;; Registers used:
   330 ;;		wreg, status,2, status,0, cstack
   331 ;; Tracked objects:
   332 ;;		On entry : 0/0
   333 ;;		On exit  : 0/0
   334 ;;		Unchanged: 0/0
   335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   340 ;;Total ram usage:        0 bytes
   341 ;; Hardware stack levels used: 1
   342 ;; Hardware stack levels required when called: 5
   343 ;; This function calls:
   344 ;;		_ADC_Initialize
   345 ;;		_EUSART1_Initialize
   346 ;;		_INTERRUPT_Initialize
   347 ;;		_OSCILLATOR_Initialize
   348 ;;		_PIN_MANAGER_Initialize
   349 ;;		_TMR0_Initialize
   350 ;; This function is called by:
   351 ;;		_main
   352 ;; This function uses a non-reentrant model
   353 ;;
   354                           
   355                           	psect	text1
   356   000258                     __ptext1:
   357                           	callstack 0
   358   000258                     _SYSTEM_Initialize:
   359                           	callstack 25
   360   000258                     
   361                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
   362   000258  EC8A  F001         	call	_INTERRUPT_Initialize	;wreg free
   363   00025C                     
   364                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
   365   00025C  EC88  F000         	call	_PIN_MANAGER_Initialize	;wreg free
   366   000260                     
   367                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
   368   000260  EC51  F001         	call	_OSCILLATOR_Initialize	;wreg free
   369   000264                     
   370                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
   371   000264  EC18  F001         	call	_ADC_Initialize	;wreg free
   372   000268                     
   373                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
   374   000268  ECA8  F000         	call	_TMR0_Initialize	;wreg free
   375   00026C                     
   376                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
   377   00026C  EC63  F000         	call	_EUSART1_Initialize	;wreg free
   378   000270  0012               	return		;funcret
   379   000272                     __end_of_SYSTEM_Initialize:
   380                           	callstack 0
   381                           
   382 ;; *************** function _TMR0_Initialize *****************
   383 ;; Defined at:
   384 ;;		line 67 in file "mcc_generated_files/tmr0.c"
   385 ;; Parameters:    Size  Location     Type
   386 ;;		None
   387 ;; Auto vars:     Size  Location     Type
   388 ;;		None
   389 ;; Return value:  Size  Location     Type
   390 ;;                  1    wreg      void 
   391 ;; Registers used:
   392 ;;		wreg, status,2, status,0, cstack
   393 ;; Tracked objects:
   394 ;;		On entry : 0/0
   395 ;;		On exit  : 0/0
   396 ;;		Unchanged: 0/0
   397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   400 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   401 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   402 ;;Total ram usage:        2 bytes
   403 ;; Hardware stack levels used: 1
   404 ;; Hardware stack levels required when called: 4
   405 ;; This function calls:
   406 ;;		_TMR0_SetInterruptHandler
   407 ;; This function is called by:
   408 ;;		_SYSTEM_Initialize
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412                           	psect	text2
   413   000150                     __ptext2:
   414                           	callstack 0
   415   000150                     _TMR0_Initialize:
   416                           	callstack 25
   417   000150                     
   418                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
   419   000150  9CD5               	bcf	213,6,c	;volatile
   420   000152                     
   421                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x00;
   422   000152  0E00               	movlw	0
   423   000154  6ED7               	movwf	215,c	;volatile
   424                           
   425                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0xBF;
   426   000156  0EBF               	movlw	191
   427   000158  6ED6               	movwf	214,c	;volatile
   428   00015A                     
   429                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
   430   00015A  50D6               	movf	214,w,c	;volatile
   431   00015C  CFD7 F017          	movff	4055,??_TMR0_Initialize	;volatile
   432   000160  6A18               	clrf	(??_TMR0_Initialize+1)^0,c
   433   000162  C017  F018         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
   434   000166  6A17               	clrf	??_TMR0_Initialize^0,c
   435   000168  1017               	iorwf	??_TMR0_Initialize^0,w,c
   436   00016A  6E10               	movwf	_timer0ReloadVal^0,c	;volatile
   437   00016C  5018               	movf	(??_TMR0_Initialize+1)^0,w,c
   438   00016E  6E11               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
   439   000170                     
   440                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
   441   000170  94F2               	bcf	242,2,c	;volatile
   442   000172                     
   443                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
   444   000172  8AF2               	bsf	242,5,c	;volatile
   445   000174                     
   446                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
   447   000174  0E0E               	movlw	low _TMR0_DefaultInterruptHandler
   448   000176  6E14               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
   449   000178  0E03               	movlw	high _TMR0_DefaultInterruptHandler
   450   00017A  6E15               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
   451   00017C  0E00               	movlw	low (_TMR0_DefaultInterruptHandler shr (0+16))
   452   00017E  6E16               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+2)^0,c
   453   000180  EC64  F001         	call	_TMR0_SetInterruptHandler	;wreg free
   454   000184                     
   455                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x90;
   456   000184  0E90               	movlw	144
   457   000186  6ED5               	movwf	213,c	;volatile
   458   000188  0012               	return		;funcret
   459   00018A                     __end_of_TMR0_Initialize:
   460                           	callstack 0
   461                           
   462 ;; *************** function _TMR0_SetInterruptHandler *****************
   463 ;; Defined at:
   464 ;;		line 156 in file "mcc_generated_files/tmr0.c"
   465 ;; Parameters:    Size  Location     Type
   466 ;;  InterruptHan    3    2[COMRAM] PTR FTN()void 
   467 ;;		 -> TMR0_DefaultInterruptHandler(1), 
   468 ;; Auto vars:     Size  Location     Type
   469 ;;		None
   470 ;; Return value:  Size  Location     Type
   471 ;;                  1    wreg      void 
   472 ;; Registers used:
   473 ;;		wreg, status,2, status,0
   474 ;; Tracked objects:
   475 ;;		On entry : 0/0
   476 ;;		On exit  : 0/0
   477 ;;		Unchanged: 0/0
   478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   479 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   482 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   483 ;;Total ram usage:        3 bytes
   484 ;; Hardware stack levels used: 1
   485 ;; Hardware stack levels required when called: 3
   486 ;; This function calls:
   487 ;;		Nothing
   488 ;; This function is called by:
   489 ;;		_TMR0_Initialize
   490 ;; This function uses a non-reentrant model
   491 ;;
   492                           
   493                           	psect	text3
   494   0002C8                     __ptext3:
   495                           	callstack 0
   496   0002C8                     _TMR0_SetInterruptHandler:
   497                           	callstack 25
   498   0002C8                     
   499                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
   500   0002C8  C014  F001         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
   501   0002CC  C015  F002         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
   502   0002D0  C016  F003         	movff	TMR0_SetInterruptHandler@InterruptHandler+2,_TMR0_InterruptHandler+2
   503   0002D4  0012               	return		;funcret
   504   0002D6                     __end_of_TMR0_SetInterruptHandler:
   505                           	callstack 0
   506                           
   507 ;; *************** function _PIN_MANAGER_Initialize *****************
   508 ;; Defined at:
   509 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   510 ;; Parameters:    Size  Location     Type
   511 ;;		None
   512 ;; Auto vars:     Size  Location     Type
   513 ;;		None
   514 ;; Return value:  Size  Location     Type
   515 ;;                  1    wreg      void 
   516 ;; Registers used:
   517 ;;		wreg, status,2
   518 ;; Tracked objects:
   519 ;;		On entry : 0/0
   520 ;;		On exit  : 0/0
   521 ;;		Unchanged: 0/0
   522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   527 ;;Total ram usage:        0 bytes
   528 ;; Hardware stack levels used: 1
   529 ;; Hardware stack levels required when called: 3
   530 ;; This function calls:
   531 ;;		Nothing
   532 ;; This function is called by:
   533 ;;		_SYSTEM_Initialize
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537                           	psect	text4
   538   000110                     __ptext4:
   539                           	callstack 0
   540   000110                     _PIN_MANAGER_Initialize:
   541                           	callstack 26
   542   000110                     
   543                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
   544   000110  0E00               	movlw	0
   545   000112  6E8D               	movwf	141,c	;volatile
   546                           
   547                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
   548   000114  0E00               	movlw	0
   549   000116  6E8C               	movwf	140,c	;volatile
   550                           
   551                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
   552   000118  0E00               	movlw	0
   553   00011A  6E89               	movwf	137,c	;volatile
   554                           
   555                           ;mcc_generated_files/pin_manager.c: 63:     LATF = 0x00;
   556   00011C  0E00               	movlw	0
   557   00011E  6E8E               	movwf	142,c	;volatile
   558                           
   559                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
   560   000120  0E00               	movlw	0
   561   000122  6E8A               	movwf	138,c	;volatile
   562                           
   563                           ;mcc_generated_files/pin_manager.c: 65:     LATG = 0x00;
   564   000124  0E00               	movlw	0
   565   000126  6E8F               	movwf	143,c	;volatile
   566                           
   567                           ;mcc_generated_files/pin_manager.c: 66:     LATC = 0x00;
   568   000128  0E00               	movlw	0
   569   00012A  6E8B               	movwf	139,c	;volatile
   570                           
   571                           ;mcc_generated_files/pin_manager.c: 67:     LATH = 0x00;
   572   00012C  0E00               	movlw	0
   573   00012E  6E90               	movwf	144,c	;volatile
   574   000130                     
   575                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0xFF;
   576   000130  6896               	setf	150,c	;volatile
   577                           
   578                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0xFE;
   579   000132  0EFE               	movlw	254
   580   000134  6E97               	movwf	151,c	;volatile
   581   000136                     
   582                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
   583   000136  6892               	setf	146,c	;volatile
   584                           
   585                           ;mcc_generated_files/pin_manager.c: 75:     TRISG = 0x1F;
   586   000138  0E1F               	movlw	31
   587   00013A  6E98               	movwf	152,c	;volatile
   588   00013C                     
   589                           ;mcc_generated_files/pin_manager.c: 76:     TRISB = 0xFF;
   590   00013C  6893               	setf	147,c	;volatile
   591   00013E                     
   592                           ;mcc_generated_files/pin_manager.c: 77:     TRISH = 0xFF;
   593   00013E  6899               	setf	153,c	;volatile
   594                           
   595                           ;mcc_generated_files/pin_manager.c: 78:     TRISC = 0xBF;
   596   000140  0EBF               	movlw	191
   597   000142  6E94               	movwf	148,c	;volatile
   598   000144                     
   599                           ;mcc_generated_files/pin_manager.c: 79:     TRISD = 0xFF;
   600   000144  6895               	setf	149,c	;volatile
   601   000146                     
   602                           ;mcc_generated_files/pin_manager.c: 84:     ANCON0 = 0xFF;
   603   000146  010F               	movlb	15	; () banked
   604   000148  6925               	setf	37,b	;volatile
   605   00014A                     
   606                           ; BSR set to: 15
   607                           ;mcc_generated_files/pin_manager.c: 85:     ANCON1 = 0xFF;
   608   00014A  6924               	setf	36,b	;volatile
   609   00014C                     
   610                           ; BSR set to: 15
   611                           ;mcc_generated_files/pin_manager.c: 86:     ANCON2 = 0xFF;
   612   00014C  6923               	setf	35,b	;volatile
   613   00014E                     
   614                           ; BSR set to: 15
   615   00014E  0012               	return		;funcret
   616   000150                     __end_of_PIN_MANAGER_Initialize:
   617                           	callstack 0
   618                           
   619 ;; *************** function _OSCILLATOR_Initialize *****************
   620 ;; Defined at:
   621 ;;		line 61 in file "mcc_generated_files/mcc.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;		None
   624 ;; Auto vars:     Size  Location     Type
   625 ;;		None
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		wreg, status,2
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   639 ;;Total ram usage:        0 bytes
   640 ;; Hardware stack levels used: 1
   641 ;; Hardware stack levels required when called: 3
   642 ;; This function calls:
   643 ;;		Nothing
   644 ;; This function is called by:
   645 ;;		_SYSTEM_Initialize
   646 ;; This function uses a non-reentrant model
   647 ;;
   648                           
   649                           	psect	text5
   650   0002A2                     __ptext5:
   651                           	callstack 0
   652   0002A2                     _OSCILLATOR_Initialize:
   653                           	callstack 26
   654   0002A2                     
   655                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x60;
   656   0002A2  0E60               	movlw	96
   657   0002A4  6ED3               	movwf	211,c	;volatile
   658                           
   659                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x00;
   660   0002A6  0E00               	movlw	0
   661   0002A8  6E64               	movwf	100,c	;volatile
   662                           
   663                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
   664   0002AA  0E00               	movlw	0
   665   0002AC  6E9B               	movwf	155,c	;volatile
   666                           
   667                           ;mcc_generated_files/mcc.c: 70:     REFOCON = 0x00;
   668   0002AE  0E00               	movlw	0
   669   0002B0  010F               	movlb	15	; () banked
   670   0002B2  6F2A               	movwf	42,b	;volatile
   671   0002B4                     
   672                           ; BSR set to: 15
   673   0002B4  0012               	return		;funcret
   674   0002B6                     __end_of_OSCILLATOR_Initialize:
   675                           	callstack 0
   676                           
   677 ;; *************** function _INTERRUPT_Initialize *****************
   678 ;; Defined at:
   679 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;		None
   682 ;; Auto vars:     Size  Location     Type
   683 ;;		None
   684 ;; Return value:  Size  Location     Type
   685 ;;                  1    wreg      void 
   686 ;; Registers used:
   687 ;;		None
   688 ;; Tracked objects:
   689 ;;		On entry : 0/0
   690 ;;		On exit  : 0/0
   691 ;;		Unchanged: 0/0
   692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   697 ;;Total ram usage:        0 bytes
   698 ;; Hardware stack levels used: 1
   699 ;; Hardware stack levels required when called: 3
   700 ;; This function calls:
   701 ;;		Nothing
   702 ;; This function is called by:
   703 ;;		_SYSTEM_Initialize
   704 ;; This function uses a non-reentrant model
   705 ;;
   706                           
   707                           	psect	text6
   708   000314                     __ptext6:
   709                           	callstack 0
   710   000314                     _INTERRUPT_Initialize:
   711                           	callstack 26
   712   000314                     
   713                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
   714   000314  9ED0               	bcf	208,7,c	;volatile
   715   000316  0012               	return		;funcret
   716   000318                     __end_of_INTERRUPT_Initialize:
   717                           	callstack 0
   718                           
   719 ;; *************** function _EUSART1_Initialize *****************
   720 ;; Defined at:
   721 ;;		line 66 in file "mcc_generated_files/eusart1.c"
   722 ;; Parameters:    Size  Location     Type
   723 ;;		None
   724 ;; Auto vars:     Size  Location     Type
   725 ;;		None
   726 ;; Return value:  Size  Location     Type
   727 ;;                  1    wreg      void 
   728 ;; Registers used:
   729 ;;		wreg, status,2, status,0, cstack
   730 ;; Tracked objects:
   731 ;;		On entry : 0/0
   732 ;;		On exit  : 0/0
   733 ;;		Unchanged: 0/0
   734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   739 ;;Total ram usage:        0 bytes
   740 ;; Hardware stack levels used: 1
   741 ;; Hardware stack levels required when called: 4
   742 ;; This function calls:
   743 ;;		_EUSART1_SetErrorHandler
   744 ;;		_EUSART1_SetFramingErrorHandler
   745 ;;		_EUSART1_SetOverrunErrorHandler
   746 ;; This function is called by:
   747 ;;		_SYSTEM_Initialize
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751                           	psect	text7
   752   0000C6                     __ptext7:
   753                           	callstack 0
   754   0000C6                     _EUSART1_Initialize:
   755                           	callstack 25
   756   0000C6                     
   757                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x48;
   758   0000C6  0E48               	movlw	72
   759   0000C8  6E65               	movwf	101,c	;volatile
   760                           
   761                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
   762   0000CA  0E90               	movlw	144
   763   0000CC  6EAB               	movwf	171,c	;volatile
   764                           
   765                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
   766   0000CE  0E24               	movlw	36
   767   0000D0  6EAC               	movwf	172,c	;volatile
   768                           
   769                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x8A;
   770   0000D2  0E8A               	movlw	138
   771   0000D4  6EAF               	movwf	175,c	;volatile
   772                           
   773                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x00;
   774   0000D6  0E00               	movlw	0
   775   0000D8  6ED4               	movwf	212,c	;volatile
   776   0000DA                     
   777                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
   778   0000DA  0E00               	movlw	0
   779   0000DC  6E14               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
   780   0000DE  0E00               	movlw	0
   781   0000E0  6E15               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
   782   0000E2  0E00               	movlw	0
   783   0000E4  6E16               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+2)^0,c
   784   0000E6  EC72  F001         	call	_EUSART1_SetFramingErrorHandler	;wreg free
   785   0000EA                     
   786                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
   787   0000EA  0E00               	movlw	0
   788   0000EC  6E14               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
   789   0000EE  0E00               	movlw	0
   790   0000F0  6E15               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
   791   0000F2  0E00               	movlw	0
   792   0000F4  6E16               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+2)^0,c
   793   0000F6  EC6B  F001         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
   794   0000FA                     
   795                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
   796   0000FA  0E00               	movlw	0
   797   0000FC  6E14               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
   798   0000FE  0E00               	movlw	0
   799   000100  6E15               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
   800   000102  0E00               	movlw	0
   801   000104  6E16               	movwf	(EUSART1_SetErrorHandler@interruptHandler+2)^0,c
   802   000106  EC79  F001         	call	_EUSART1_SetErrorHandler	;wreg free
   803   00010A                     
   804                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
   805   00010A  0E00               	movlw	0
   806   00010C  6E1C               	movwf	_eusart1RxLastError^0,c	;volatile
   807   00010E  0012               	return		;funcret
   808   000110                     __end_of_EUSART1_Initialize:
   809                           	callstack 0
   810                           
   811 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
   812 ;; Defined at:
   813 ;;		line 170 in file "mcc_generated_files/eusart1.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;  interruptHan    3    2[COMRAM] PTR FTN()void 
   816 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
   817 ;; Auto vars:     Size  Location     Type
   818 ;;		None
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      void 
   821 ;; Registers used:
   822 ;;		wreg, status,2, status,0
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   828 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   831 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   832 ;;Total ram usage:        3 bytes
   833 ;; Hardware stack levels used: 1
   834 ;; Hardware stack levels required when called: 3
   835 ;; This function calls:
   836 ;;		Nothing
   837 ;; This function is called by:
   838 ;;		_EUSART1_Initialize
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842                           	psect	text8
   843   0002D6                     __ptext8:
   844                           	callstack 0
   845   0002D6                     _EUSART1_SetOverrunErrorHandler:
   846                           	callstack 25
   847   0002D6                     
   848                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
   849   0002D6  C014  F007         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
   850   0002DA  C015  F008         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
   851   0002DE  C016  F009         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+2,_EUSART1_OverrunErrorHandler+2
   852   0002E2  0012               	return		;funcret
   853   0002E4                     __end_of_EUSART1_SetOverrunErrorHandler:
   854                           	callstack 0
   855                           
   856 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
   857 ;; Defined at:
   858 ;;		line 166 in file "mcc_generated_files/eusart1.c"
   859 ;; Parameters:    Size  Location     Type
   860 ;;  interruptHan    3    2[COMRAM] PTR FTN()void 
   861 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
   862 ;; Auto vars:     Size  Location     Type
   863 ;;		None
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg, status,2, status,0
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   873 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   876 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   877 ;;Total ram usage:        3 bytes
   878 ;; Hardware stack levels used: 1
   879 ;; Hardware stack levels required when called: 3
   880 ;; This function calls:
   881 ;;		Nothing
   882 ;; This function is called by:
   883 ;;		_EUSART1_Initialize
   884 ;; This function uses a non-reentrant model
   885 ;;
   886                           
   887                           	psect	text9
   888   0002E4                     __ptext9:
   889                           	callstack 0
   890   0002E4                     _EUSART1_SetFramingErrorHandler:
   891                           	callstack 25
   892   0002E4                     
   893                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
   894   0002E4  C014  F00A         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
   895   0002E8  C015  F00B         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
   896   0002EC  C016  F00C         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+2,_EUSART1_FramingErrorHandler+2
   897   0002F0  0012               	return		;funcret
   898   0002F2                     __end_of_EUSART1_SetFramingErrorHandler:
   899                           	callstack 0
   900                           
   901 ;; *************** function _EUSART1_SetErrorHandler *****************
   902 ;; Defined at:
   903 ;;		line 174 in file "mcc_generated_files/eusart1.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;  interruptHan    3    2[COMRAM] PTR FTN()void 
   906 ;;		 -> EUSART1_DefaultErrorHandler(1), 
   907 ;; Auto vars:     Size  Location     Type
   908 ;;		None
   909 ;; Return value:  Size  Location     Type
   910 ;;                  1    wreg      void 
   911 ;; Registers used:
   912 ;;		wreg, status,2, status,0
   913 ;; Tracked objects:
   914 ;;		On entry : 0/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   918 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   921 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   922 ;;Total ram usage:        3 bytes
   923 ;; Hardware stack levels used: 1
   924 ;; Hardware stack levels required when called: 3
   925 ;; This function calls:
   926 ;;		Nothing
   927 ;; This function is called by:
   928 ;;		_EUSART1_Initialize
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           	psect	text10
   933   0002F2                     __ptext10:
   934                           	callstack 0
   935   0002F2                     _EUSART1_SetErrorHandler:
   936                           	callstack 25
   937   0002F2                     
   938                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
   939   0002F2  C014  F004         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
   940   0002F6  C015  F005         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
   941   0002FA  C016  F006         	movff	EUSART1_SetErrorHandler@interruptHandler+2,_EUSART1_ErrorHandler+2
   942   0002FE  0012               	return		;funcret
   943   000300                     __end_of_EUSART1_SetErrorHandler:
   944                           	callstack 0
   945                           
   946 ;; *************** function _ADC_Initialize *****************
   947 ;; Defined at:
   948 ;;		line 62 in file "mcc_generated_files/adc.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;		None
   951 ;; Auto vars:     Size  Location     Type
   952 ;;		None
   953 ;; Return value:  Size  Location     Type
   954 ;;                  1    wreg      void 
   955 ;; Registers used:
   956 ;;		wreg, status,2, status,0, cstack
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   966 ;;Total ram usage:        0 bytes
   967 ;; Hardware stack levels used: 1
   968 ;; Hardware stack levels required when called: 4
   969 ;; This function calls:
   970 ;;		_ADC_SetInterruptHandler
   971 ;; This function is called by:
   972 ;;		_SYSTEM_Initialize
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           	psect	text11
   977   000230                     __ptext11:
   978                           	callstack 0
   979   000230                     _ADC_Initialize:
   980                           	callstack 25
   981   000230                     
   982                           ;mcc_generated_files/adc.c: 67:     ADCON0 = 0x01;
   983   000230  0E01               	movlw	1
   984   000232  6EC2               	movwf	194,c	;volatile
   985                           
   986                           ;mcc_generated_files/adc.c: 70:     ADCON1 = 0x00;
   987   000234  0E00               	movlw	0
   988   000236  6EC1               	movwf	193,c	;volatile
   989                           
   990                           ;mcc_generated_files/adc.c: 73:     ADCON2 = 0xBE;
   991   000238  0EBE               	movlw	190
   992   00023A  6EC0               	movwf	192,c	;volatile
   993                           
   994                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
   995   00023C  0E00               	movlw	0
   996   00023E  6EC4               	movwf	196,c	;volatile
   997                           
   998                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
   999   000240  0E00               	movlw	0
  1000   000242  6EC3               	movwf	195,c	;volatile
  1001   000244                     
  1002                           ;mcc_generated_files/adc.c: 82:     PIE1bits.ADIE = 1;
  1003   000244  8C9D               	bsf	157,6,c	;volatile
  1004   000246                     
  1005                           ;mcc_generated_files/adc.c: 85:     ADC_SetInterruptHandler(ADC_DefaultInterruptHandler)
      +                          ;
  1006   000246  0E18               	movlw	low _ADC_DefaultInterruptHandler
  1007   000248  6E14               	movwf	ADC_SetInterruptHandler@InterruptHandler^0,c
  1008   00024A  0E03               	movlw	high _ADC_DefaultInterruptHandler
  1009   00024C  6E15               	movwf	(ADC_SetInterruptHandler@InterruptHandler+1)^0,c
  1010   00024E  0E00               	movlw	low (_ADC_DefaultInterruptHandler shr (0+16))
  1011   000250  6E16               	movwf	(ADC_SetInterruptHandler@InterruptHandler+2)^0,c
  1012   000252  EC80  F001         	call	_ADC_SetInterruptHandler	;wreg free
  1013   000256  0012               	return		;funcret
  1014   000258                     __end_of_ADC_Initialize:
  1015                           	callstack 0
  1016                           
  1017 ;; *************** function _ADC_SetInterruptHandler *****************
  1018 ;; Defined at:
  1019 ;;		line 150 in file "mcc_generated_files/adc.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;  InterruptHan    3    2[COMRAM] PTR FTN()void 
  1022 ;;		 -> ADC_DefaultInterruptHandler(1), 
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;		None
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  1    wreg      void 
  1027 ;; Registers used:
  1028 ;;		wreg, status,2, status,0
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1034 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1037 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1038 ;;Total ram usage:        3 bytes
  1039 ;; Hardware stack levels used: 1
  1040 ;; Hardware stack levels required when called: 3
  1041 ;; This function calls:
  1042 ;;		Nothing
  1043 ;; This function is called by:
  1044 ;;		_ADC_Initialize
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048                           	psect	text12
  1049   000300                     __ptext12:
  1050                           	callstack 0
  1051   000300                     _ADC_SetInterruptHandler:
  1052                           	callstack 25
  1053   000300                     
  1054                           ;mcc_generated_files/adc.c: 151:     ADC_InterruptHandler = InterruptHandler;
  1055   000300  C014  F00D         	movff	ADC_SetInterruptHandler@InterruptHandler,_ADC_InterruptHandler
  1056   000304  C015  F00E         	movff	ADC_SetInterruptHandler@InterruptHandler+1,_ADC_InterruptHandler+1
  1057   000308  C016  F00F         	movff	ADC_SetInterruptHandler@InterruptHandler+2,_ADC_InterruptHandler+2
  1058   00030C  0012               	return		;funcret
  1059   00030E                     __end_of_ADC_SetInterruptHandler:
  1060                           	callstack 0
  1061                           
  1062 ;; *************** function _EUSART1_Write *****************
  1063 ;; Defined at:
  1064 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;  txData          1    wreg     unsigned char 
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;  txData          1    2[COMRAM] unsigned char 
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      void 
  1071 ;; Registers used:
  1072 ;;		wreg
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1079 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1081 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1082 ;;Total ram usage:        1 bytes
  1083 ;; Hardware stack levels used: 1
  1084 ;; Hardware stack levels required when called: 3
  1085 ;; This function calls:
  1086 ;;		Nothing
  1087 ;; This function is called by:
  1088 ;;		_main
  1089 ;;		_putch
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           	psect	text13
  1094   00028C                     __ptext13:
  1095                           	callstack 0
  1096   00028C                     _EUSART1_Write:
  1097                           	callstack 27
  1098                           
  1099                           ;incstack = 0
  1100                           ;EUSART1_Write@txData stored from wreg
  1101   00028C  6E14               	movwf	EUSART1_Write@txData^0,c
  1102   00028E                     l174:
  1103                           
  1104                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  1105   00028E  A89E               	btfss	158,4,c	;volatile
  1106   000290  EF4C  F001         	goto	u201
  1107   000294  EF4E  F001         	goto	u200
  1108   000298                     u201:
  1109   000298  EF47  F001         	goto	l174
  1110   00029C                     u200:
  1111   00029C                     
  1112                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  1113   00029C  C014  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  1114   0002A0  0012               	return		;funcret
  1115   0002A2                     __end_of_EUSART1_Write:
  1116                           	callstack 0
  1117                           
  1118 ;; *************** function _ADC_StartConversion *****************
  1119 ;; Defined at:
  1120 ;;		line 88 in file "mcc_generated_files/adc.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;  channel         1    wreg     enum E6485
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;  channel         1    3[COMRAM] enum E6485
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      void 
  1127 ;; Registers used:
  1128 ;;		wreg, status,2, status,0
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1135 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1136 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1137 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1138 ;;Total ram usage:        2 bytes
  1139 ;; Hardware stack levels used: 1
  1140 ;; Hardware stack levels required when called: 3
  1141 ;; This function calls:
  1142 ;;		Nothing
  1143 ;; This function is called by:
  1144 ;;		_main
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           	psect	text14
  1149   000272                     __ptext14:
  1150                           	callstack 0
  1151   000272                     _ADC_StartConversion:
  1152                           	callstack 27
  1153                           
  1154                           ;incstack = 0
  1155                           ;ADC_StartConversion@channel stored from wreg
  1156   000272  6E15               	movwf	ADC_StartConversion@channel^0,c
  1157   000274                     
  1158                           ;mcc_generated_files/adc.c: 88: void ADC_StartConversion(adc_channel_t channel);mcc_gene
      +                          rated_files/adc.c: 89: {;mcc_generated_files/adc.c: 91:     ADCON0bits.CHS = channel;
  1159   000274  C015  F014         	movff	ADC_StartConversion@channel,??_ADC_StartConversion
  1160   000278  4614               	rlncf	??_ADC_StartConversion^0,f,c
  1161   00027A  4614               	rlncf	??_ADC_StartConversion^0,f,c
  1162   00027C  50C2               	movf	194,w,c	;volatile
  1163   00027E  1814               	xorwf	??_ADC_StartConversion^0,w,c
  1164   000280  0B83               	andlw	-125
  1165   000282  1814               	xorwf	??_ADC_StartConversion^0,w,c
  1166   000284  6EC2               	movwf	194,c	;volatile
  1167   000286                     
  1168                           ;mcc_generated_files/adc.c: 94:     ADCON0bits.ADON = 1;
  1169   000286  80C2               	bsf	194,0,c	;volatile
  1170   000288                     
  1171                           ;mcc_generated_files/adc.c: 98:     ADCON0bits.GO_nDONE = 1;
  1172   000288  82C2               	bsf	194,1,c	;volatile
  1173   00028A  0012               	return		;funcret
  1174   00028C                     __end_of_ADC_StartConversion:
  1175                           	callstack 0
  1176                           
  1177 ;; *************** function _ADC_GetConversion *****************
  1178 ;; Defined at:
  1179 ;;		line 113 in file "mcc_generated_files/adc.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;  channel         1    wreg     enum E6485
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;  channel         1    6[COMRAM] enum E6485
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  2    2[COMRAM] unsigned short 
  1186 ;; Registers used:
  1187 ;;		wreg, status,2, status,0
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1193 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1194 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1195 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1196 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1197 ;;Total ram usage:        5 bytes
  1198 ;; Hardware stack levels used: 1
  1199 ;; Hardware stack levels required when called: 3
  1200 ;; This function calls:
  1201 ;;		Nothing
  1202 ;; This function is called by:
  1203 ;;		_main
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207                           	psect	text15
  1208   00018A                     __ptext15:
  1209                           	callstack 0
  1210   00018A                     _ADC_GetConversion:
  1211                           	callstack 27
  1212                           
  1213                           ;incstack = 0
  1214                           ;ADC_GetConversion@channel stored from wreg
  1215   00018A  6E18               	movwf	ADC_GetConversion@channel^0,c
  1216   00018C                     
  1217                           ;mcc_generated_files/adc.c: 113: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 114: {;mcc_generated_files/adc.c: 116:     ADCON0bits.CHS = ch
      +                          annel;
  1218   00018C  C018  F016         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  1219   000190  4616               	rlncf	??_ADC_GetConversion^0,f,c
  1220   000192  4616               	rlncf	??_ADC_GetConversion^0,f,c
  1221   000194  50C2               	movf	194,w,c	;volatile
  1222   000196  1816               	xorwf	??_ADC_GetConversion^0,w,c
  1223   000198  0B83               	andlw	-125
  1224   00019A  1816               	xorwf	??_ADC_GetConversion^0,w,c
  1225   00019C  6EC2               	movwf	194,c	;volatile
  1226   00019E                     
  1227                           ;mcc_generated_files/adc.c: 119:     ADCON0bits.ADON = 1;
  1228   00019E  80C2               	bsf	194,0,c	;volatile
  1229   0001A0                     
  1230                           ;mcc_generated_files/adc.c: 123:     ADCON0bits.GO_nDONE = 1;
  1231   0001A0  82C2               	bsf	194,1,c	;volatile
  1232   0001A2                     l39:
  1233                           
  1234                           ;mcc_generated_files/adc.c: 126:     while (ADCON0bits.GO_nDONE)
  1235   0001A2  B2C2               	btfsc	194,1,c	;volatile
  1236   0001A4  EFD6  F000         	goto	u171
  1237   0001A8  EFD8  F000         	goto	u170
  1238   0001AC                     u171:
  1239   0001AC  EFD1  F000         	goto	l39
  1240   0001B0                     u170:
  1241   0001B0                     
  1242                           ;mcc_generated_files/adc.c: 131:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  1243   0001B0  50C4               	movf	196,w,c	;volatile
  1244   0001B2  6E17               	movwf	(??_ADC_GetConversion+1)^0,c
  1245   0001B4  6A16               	clrf	??_ADC_GetConversion^0,c
  1246   0001B6  50C3               	movf	195,w,c	;volatile
  1247   0001B8  2416               	addwf	??_ADC_GetConversion^0,w,c
  1248   0001BA  6E14               	movwf	?_ADC_GetConversion^0,c
  1249   0001BC  0E00               	movlw	0
  1250   0001BE  2017               	addwfc	(??_ADC_GetConversion+1)^0,w,c
  1251   0001C0  6E15               	movwf	(?_ADC_GetConversion+1)^0,c
  1252   0001C2  0012               	return		;funcret
  1253   0001C4                     __end_of_ADC_GetConversion:
  1254                           	callstack 0
  1255                           
  1256 ;; *************** function _INTERRUPT_InterruptManager *****************
  1257 ;; Defined at:
  1258 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  1259 ;; Parameters:    Size  Location     Type
  1260 ;;		None
  1261 ;; Auto vars:     Size  Location     Type
  1262 ;;		None
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  1    wreg      void 
  1265 ;; Registers used:
  1266 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1274 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1275 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1276 ;;Total ram usage:        2 bytes
  1277 ;; Hardware stack levels used: 1
  1278 ;; Hardware stack levels required when called: 2
  1279 ;; This function calls:
  1280 ;;		_ADC_ISR
  1281 ;;		_TMR0_ISR
  1282 ;; This function is called by:
  1283 ;;		Interrupt level 2
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           	psect	intcode
  1288   000008                     __pintcode:
  1289                           	callstack 0
  1290   000008                     _INTERRUPT_InterruptManager:
  1291                           	callstack 25
  1292                           
  1293                           ;incstack = 0
  1294   000008  821D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1295   00000A  CFFA F012          	movff	pclath,??_INTERRUPT_InterruptManager
  1296   00000E  CFFB F013          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1297   000012                     
  1298                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  1299   000012  AAF2               	btfss	242,5,c	;volatile
  1300   000014  EF0E  F000         	goto	i2u21_41
  1301   000018  EF10  F000         	goto	i2u21_40
  1302   00001C                     i2u21_41:
  1303   00001C  EF1B  F000         	goto	i2l75
  1304   000020                     i2u21_40:
  1305   000020  A4F2               	btfss	242,2,c	;volatile
  1306   000022  EF15  F000         	goto	i2u22_41
  1307   000026  EF17  F000         	goto	i2u22_40
  1308   00002A                     i2u22_41:
  1309   00002A  EF1B  F000         	goto	i2l75
  1310   00002E                     i2u22_40:
  1311   00002E                     
  1312                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  1313   00002E  ECE2  F000         	call	_TMR0_ISR	;wreg free
  1314                           
  1315                           ;mcc_generated_files/interrupt_manager.c: 64:     }
  1316   000032  EF34  F000         	goto	i2l81
  1317   000036                     i2l75:
  1318   000036  ACF2               	btfss	242,6,c	;volatile
  1319   000038  EF20  F000         	goto	i2u23_41
  1320   00003C  EF22  F000         	goto	i2u23_40
  1321   000040                     i2u23_41:
  1322   000040  EF34  F000         	goto	i2l81
  1323   000044                     i2u23_40:
  1324   000044                     
  1325                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  1326   000044  AC9D               	btfss	157,6,c	;volatile
  1327   000046  EF27  F000         	goto	i2u24_41
  1328   00004A  EF29  F000         	goto	i2u24_40
  1329   00004E                     i2u24_41:
  1330   00004E  EF34  F000         	goto	i2l80
  1331   000052                     i2u24_40:
  1332   000052  AC9E               	btfss	158,6,c	;volatile
  1333   000054  EF2E  F000         	goto	i2u25_41
  1334   000058  EF30  F000         	goto	i2u25_40
  1335   00005C                     i2u25_41:
  1336   00005C  EF34  F000         	goto	i2l80
  1337   000060                     i2u25_40:
  1338   000060                     
  1339                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             ADC_ISR();
  1340   000060  ECFF  F000         	call	_ADC_ISR	;wreg free
  1341                           
  1342                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  1343   000064  EF34  F000         	goto	i2l81
  1344   000068                     i2l80:
  1345   000068                     i2l81:
  1346   000068  C013  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1347   00006C  C012  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1348   000070  921D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1349   000072  0011               	retfie		f
  1350   000074                     __end_of_INTERRUPT_InterruptManager:
  1351                           	callstack 0
  1352                           
  1353 ;; *************** function _TMR0_ISR *****************
  1354 ;; Defined at:
  1355 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;		None
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;		None
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  1    wreg      void 
  1362 ;; Registers used:
  1363 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1373 ;;Total ram usage:        0 bytes
  1374 ;; Hardware stack levels used: 1
  1375 ;; Hardware stack levels required when called: 1
  1376 ;; This function calls:
  1377 ;;		Absolute function
  1378 ;;		_TMR0_DefaultInterruptHandler
  1379 ;; This function is called by:
  1380 ;;		_INTERRUPT_InterruptManager
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384                           	psect	text17
  1385   0001C4                     __ptext17:
  1386                           	callstack 0
  1387   0001C4                     _TMR0_ISR:
  1388                           	callstack 25
  1389   0001C4                     
  1390                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  1391   0001C4  94F2               	bcf	242,2,c	;volatile
  1392   0001C6                     
  1393                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  1394   0001C6  5011               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  1395   0001C8  6ED7               	movwf	215,c	;volatile
  1396   0001CA                     
  1397                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  1398   0001CA  C010  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  1399   0001CE                     
  1400                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
  1401   0001CE  5001               	movf	_TMR0_InterruptHandler^0,w,c
  1402   0001D0  1002               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  1403   0001D2  1003               	iorwf	(_TMR0_InterruptHandler+2)^0,w,c
  1404   0001D4  B4D8               	btfsc	status,2,c
  1405   0001D6  EFEF  F000         	goto	i2u18_41
  1406   0001DA  EFF1  F000         	goto	i2u18_40
  1407   0001DE                     i2u18_41:
  1408   0001DE  EFFE  F000         	goto	i2l289
  1409   0001E2                     i2u18_40:
  1410   0001E2                     
  1411                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
  1412   0001E2  D802               	call	i2u19_48
  1413   0001E4  EFFE  F000         	goto	i2u19_49
  1414   0001E8                     i2u19_48:
  1415   0001E8  0005               	push	
  1416   0001EA  6EFA               	movwf	pclath,c
  1417   0001EC  5001               	movf	_TMR0_InterruptHandler^0,w,c
  1418   0001EE  6EFD               	movwf	tosl,c
  1419   0001F0  5002               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  1420   0001F2  6EFE               	movwf	tosh,c
  1421   0001F4  5003               	movf	(_TMR0_InterruptHandler+2)^0,w,c
  1422   0001F6  6EFF               	movwf	tosu,c
  1423   0001F8  50FA               	movf	pclath,w,c
  1424   0001FA  0012               	return		;indir
  1425   0001FC                     i2u19_49:
  1426   0001FC                     i2l289:
  1427   0001FC  0012               	return		;funcret
  1428   0001FE                     __end_of_TMR0_ISR:
  1429                           	callstack 0
  1430                           
  1431 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  1432 ;; Defined at:
  1433 ;;		line 160 in file "mcc_generated_files/tmr0.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;		None
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;		None
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  1    wreg      void 
  1440 ;; Registers used:
  1441 ;;		wreg, status,2
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1451 ;;Total ram usage:        0 bytes
  1452 ;; Hardware stack levels used: 1
  1453 ;; This function calls:
  1454 ;;		Nothing
  1455 ;; This function is called by:
  1456 ;;		_TMR0_Initialize
  1457 ;;		_TMR0_ISR
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           
  1461                           	psect	text18
  1462   00030E                     __ptext18:
  1463                           	callstack 0
  1464   00030E                     _TMR0_DefaultInterruptHandler:
  1465                           	callstack 25
  1466   00030E                     
  1467                           ;mcc_generated_files/tmr0.c: 161:     tmr0_flag = 1;
  1468   00030E  0E01               	movlw	1
  1469   000310  6E1B               	movwf	_tmr0_flag^0,c	;volatile
  1470   000312  0012               	return		;funcret
  1471   000314                     __end_of_TMR0_DefaultInterruptHandler:
  1472                           	callstack 0
  1473                           
  1474 ;; *************** function _ADC_ISR *****************
  1475 ;; Defined at:
  1476 ;;		line 139 in file "mcc_generated_files/adc.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;		None
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;		None
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      void 
  1483 ;; Registers used:
  1484 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1494 ;;Total ram usage:        0 bytes
  1495 ;; Hardware stack levels used: 1
  1496 ;; Hardware stack levels required when called: 1
  1497 ;; This function calls:
  1498 ;;		Absolute function
  1499 ;;		_ADC_DefaultInterruptHandler
  1500 ;; This function is called by:
  1501 ;;		_INTERRUPT_InterruptManager
  1502 ;; This function uses a non-reentrant model
  1503 ;;
  1504                           
  1505                           	psect	text19
  1506   0001FE                     __ptext19:
  1507                           	callstack 0
  1508   0001FE                     _ADC_ISR:
  1509                           	callstack 25
  1510   0001FE                     
  1511                           ;mcc_generated_files/adc.c: 142:     PIR1bits.ADIF = 0;
  1512   0001FE  9C9E               	bcf	158,6,c	;volatile
  1513   000200                     
  1514                           ;mcc_generated_files/adc.c: 144:  if(ADC_InterruptHandler)
  1515   000200  500D               	movf	_ADC_InterruptHandler^0,w,c
  1516   000202  100E               	iorwf	(_ADC_InterruptHandler+1)^0,w,c
  1517   000204  100F               	iorwf	(_ADC_InterruptHandler+2)^0,w,c
  1518   000206  B4D8               	btfsc	status,2,c
  1519   000208  EF08  F001         	goto	i2u2_41
  1520   00020C  EF0A  F001         	goto	i2u2_40
  1521   000210                     i2u2_41:
  1522   000210  EF17  F001         	goto	i2l49
  1523   000214                     i2u2_40:
  1524   000214                     
  1525                           ;mcc_generated_files/adc.c: 145:     {;mcc_generated_files/adc.c: 146:         ADC_Inter
      +                          ruptHandler();
  1526   000214  D802               	call	i2u3_48
  1527   000216  EF17  F001         	goto	i2u3_49
  1528   00021A                     i2u3_48:
  1529   00021A  0005               	push	
  1530   00021C  6EFA               	movwf	pclath,c
  1531   00021E  500D               	movf	_ADC_InterruptHandler^0,w,c
  1532   000220  6EFD               	movwf	tosl,c
  1533   000222  500E               	movf	(_ADC_InterruptHandler+1)^0,w,c
  1534   000224  6EFE               	movwf	tosh,c
  1535   000226  500F               	movf	(_ADC_InterruptHandler+2)^0,w,c
  1536   000228  6EFF               	movwf	tosu,c
  1537   00022A  50FA               	movf	pclath,w,c
  1538   00022C  0012               	return		;indir
  1539   00022E                     i2u3_49:
  1540   00022E                     i2l49:
  1541   00022E  0012               	return		;funcret
  1542   000230                     __end_of_ADC_ISR:
  1543                           	callstack 0
  1544                           
  1545 ;; *************** function _ADC_DefaultInterruptHandler *****************
  1546 ;; Defined at:
  1547 ;;		line 154 in file "mcc_generated_files/adc.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;		None
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;		None
  1552 ;; Return value:  Size  Location     Type
  1553 ;;                  1    wreg      void 
  1554 ;; Registers used:
  1555 ;;		None
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1565 ;;Total ram usage:        0 bytes
  1566 ;; Hardware stack levels used: 1
  1567 ;; This function calls:
  1568 ;;		Nothing
  1569 ;; This function is called by:
  1570 ;;		_ADC_Initialize
  1571 ;;		_ADC_ISR
  1572 ;; This function uses a non-reentrant model
  1573 ;;
  1574                           
  1575                           	psect	text20
  1576   000318                     __ptext20:
  1577                           	callstack 0
  1578   000318                     _ADC_DefaultInterruptHandler:
  1579                           	callstack 25
  1580   000318  0012               	return		;funcret
  1581   00031A                     __end_of_ADC_DefaultInterruptHandler:
  1582                           	callstack 0
  1583   000000                     
  1584                           	psect	text21
  1585   000000                     __ptext21:
  1586                           	callstack 0
  1587   000000                     
  1588                           	psect	rparam
  1589   000000                     
  1590                           	psect	temp
  1591   00001D                     btemp:
  1592                           	callstack 0
  1593   00001D                     	ds	1
  1594   000000                     int$flags	set	btemp
  1595   000000                     wtemp8	set	btemp+1
  1596   000000                     ttemp5	set	btemp+1
  1597   000000                     ttemp6	set	btemp+4
  1598   000000                     ttemp7	set	btemp+8
  1599                           
  1600                           	psect	idloc
  1601                           
  1602                           ;Config register IDLOC0 @ 0x200000
  1603                           ;	unspecified, using default values
  1604   200000                     	org	2097152
  1605   200000  FF                 	db	255
  1606                           
  1607                           ;Config register IDLOC1 @ 0x200001
  1608                           ;	unspecified, using default values
  1609   200001                     	org	2097153
  1610   200001  FF                 	db	255
  1611                           
  1612                           ;Config register IDLOC2 @ 0x200002
  1613                           ;	unspecified, using default values
  1614   200002                     	org	2097154
  1615   200002  FF                 	db	255
  1616                           
  1617                           ;Config register IDLOC3 @ 0x200003
  1618                           ;	unspecified, using default values
  1619   200003                     	org	2097155
  1620   200003  FF                 	db	255
  1621                           
  1622                           ;Config register IDLOC4 @ 0x200004
  1623                           ;	unspecified, using default values
  1624   200004                     	org	2097156
  1625   200004  FF                 	db	255
  1626                           
  1627                           ;Config register IDLOC5 @ 0x200005
  1628                           ;	unspecified, using default values
  1629   200005                     	org	2097157
  1630   200005  FF                 	db	255
  1631                           
  1632                           ;Config register IDLOC6 @ 0x200006
  1633                           ;	unspecified, using default values
  1634   200006                     	org	2097158
  1635   200006  FF                 	db	255
  1636                           
  1637                           ;Config register IDLOC7 @ 0x200007
  1638                           ;	unspecified, using default values
  1639   200007                     	org	2097159
  1640   200007  FF                 	db	255
  1641                           
  1642                           	psect	config
  1643                           
  1644                           ;Config register CONFIG1L @ 0x300000
  1645                           ;	VREG Sleep Enable bit
  1646                           ;	RETEN = ON, Enabled
  1647                           ;	LF-INTOSC Low-power Enable bit
  1648                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
  1649                           ;	SOSC Power Selection and mode Configuration bits
  1650                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
  1651                           ;	Extended Instruction Set
  1652                           ;	XINST = OFF, Disabled
  1653   300000                     	org	3145728
  1654   300000  15                 	db	21
  1655                           
  1656                           ;Config register CONFIG1H @ 0x300001
  1657                           ;	Oscillator
  1658                           ;	FOSC = HS1, HS oscillator (Medium power, 4 MHz - 16 MHz)
  1659                           ;	PLL x4 Enable bit
  1660                           ;	PLLCFG = ON, Enabled
  1661                           ;	Fail-Safe Clock Monitor
  1662                           ;	FCMEN = OFF, Disabled
  1663                           ;	Internal External Oscillator Switch Over Mode
  1664                           ;	IESO = OFF, Disabled
  1665   300001                     	org	3145729
  1666   300001  13                 	db	19
  1667                           
  1668                           ;Config register CONFIG2L @ 0x300002
  1669                           ;	Power Up Timer
  1670                           ;	PWRTEN = OFF, Disabled
  1671                           ;	Brown Out Detect
  1672                           ;	BOREN = SBORDIS, Enabled in hardware, SBOREN disabled
  1673                           ;	Brown-out Reset Voltage bits
  1674                           ;	BORV = 3, 1.8V
  1675                           ;	BORMV Power level
  1676                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
  1677   300002                     	org	3145730
  1678   300002  7F                 	db	127
  1679                           
  1680                           ;Config register CONFIG2H @ 0x300003
  1681                           ;	Watchdog Timer
  1682                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
  1683                           ;	Watchdog Postscaler
  1684                           ;	WDTPS = 1048576, 1:1048576
  1685   300003                     	org	3145731
  1686   300003  7C                 	db	124
  1687                           
  1688                           ;Config register CONFIG3L @ 0x300004
  1689                           ;	RTCC Clock Select
  1690                           ;	RTCOSC = SOSCREF, RTCC uses SOSC
  1691                           ;	External Address Shift bit
  1692                           ;	EASHFT = ON, Address Shifting enabled
  1693                           ;	Address Bus Width Select bits
  1694                           ;	ABW = MM, 8-bit address bus
  1695                           ;	Data Bus Width
  1696                           ;	BW = 16, 16-bit external bus mode
  1697                           ;	External Bus Wait
  1698                           ;	WAIT = OFF, Disabled
  1699   300004                     	org	3145732
  1700   300004  F9                 	db	249
  1701                           
  1702                           ;Config register CONFIG3H @ 0x300005
  1703                           ;	CCP2 Mux
  1704                           ;	CCP2MX = PORTC, RC1
  1705                           ;	ECCP Mux
  1706                           ;	ECCPMX = PORTE, Enhanced CCP1/3 [P1B/P1C/P3B/P3C] muxed with RE6/RE5/RE4/RE3
  1707                           ;	MSSP address masking
  1708                           ;	MSSPMSK = MSK7, 7 Bit address masking mode
  1709                           ;	Master Clear Enable
  1710                           ;	MCLRE = ON, MCLR Enabled, RG5 Disabled
  1711   300005                     	org	3145733
  1712   300005  8B                 	db	139
  1713                           
  1714                           ;Config register CONFIG4L @ 0x300006
  1715                           ;	Stack Overflow Reset
  1716                           ;	STVREN = ON, Enabled
  1717                           ;	Boot Block Size
  1718                           ;	BBSIZ = BB2K, 2K word Boot Block size
  1719                           ;	Background Debug
  1720                           ;	DEBUG = OFF, Disabled
  1721   300006                     	org	3145734
  1722   300006  91                 	db	145
  1723                           
  1724                           ; Padding undefined space
  1725   300007                     	org	3145735
  1726   300007  FF                 	db	255
  1727                           
  1728                           ;Config register CONFIG5L @ 0x300008
  1729                           ;	Code Protect 00800-03FFF
  1730                           ;	CP0 = OFF, Disabled
  1731                           ;	Code Protect 04000-07FFF
  1732                           ;	CP1 = OFF, Disabled
  1733                           ;	Code Protect 08000-0BFFF
  1734                           ;	CP2 = OFF, Disabled
  1735                           ;	Code Protect 0C000-0FFFF
  1736                           ;	CP3 = OFF, Disabled
  1737                           ;	Code Protect 10000-13FFF
  1738                           ;	CP4 = OFF, Disabled
  1739                           ;	Code Protect 14000-17FFF
  1740                           ;	CP5 = OFF, Disabled
  1741                           ;	Code Protect 18000-1BFFF
  1742                           ;	CP6 = OFF, Disabled
  1743                           ;	Code Protect 1C000-1FFFF
  1744                           ;	CP7 = OFF, Disabled
  1745   300008                     	org	3145736
  1746   300008  FF                 	db	255
  1747                           
  1748                           ;Config register CONFIG5H @ 0x300009
  1749                           ;	Code Protect Boot
  1750                           ;	CPB = OFF, Disabled
  1751                           ;	Data EE Read Protect
  1752                           ;	CPD = OFF, Disabled
  1753   300009                     	org	3145737
  1754   300009  C0                 	db	192
  1755                           
  1756                           ;Config register CONFIG6L @ 0x30000A
  1757                           ;	Table Write Protect 00800-03FFF
  1758                           ;	WRT0 = OFF, Disabled
  1759                           ;	Table Write Protect 04000-07FFF
  1760                           ;	WRT1 = OFF, Disabled
  1761                           ;	Table Write Protect 08000-0BFFF
  1762                           ;	WRT2 = OFF, Disabled
  1763                           ;	Table Write Protect 0C000-0FFFF
  1764                           ;	WRT3 = OFF, Disabled
  1765                           ;	Table Write Protect 10000-13FFF
  1766                           ;	WRT4 = OFF, Disabled
  1767                           ;	Table Write Protect 14000-17FFF
  1768                           ;	WRT5 = OFF, Disabled
  1769                           ;	Table Write Protect 18000-1BFFF
  1770                           ;	WRT6 = OFF, Disabled
  1771                           ;	Table Write Protect 1C000-1FFFF
  1772                           ;	WRT7 = OFF, Disabled
  1773   30000A                     	org	3145738
  1774   30000A  FF                 	db	255
  1775                           
  1776                           ;Config register CONFIG6H @ 0x30000B
  1777                           ;	Config. Write Protect
  1778                           ;	WRTC = OFF, Disabled
  1779                           ;	Table Write Protect Boot
  1780                           ;	WRTB = OFF, Disabled
  1781                           ;	Data EE Write Protect
  1782                           ;	WRTD = OFF, Disabled
  1783   30000B                     	org	3145739
  1784   30000B  E0                 	db	224
  1785                           
  1786                           ;Config register CONFIG7L @ 0x30000C
  1787                           ;	Table Read Protect 00800-03FFF
  1788                           ;	EBRT0 = OFF, Disabled
  1789                           ;	Table Read Protect 04000-07FFF
  1790                           ;	EBRT1 = OFF, Disabled
  1791                           ;	Table Read Protect 08000-0BFFF
  1792                           ;	EBRT2 = OFF, Disabled
  1793                           ;	Table Read Protect 0C000-0FFFF
  1794                           ;	EBRT3 = OFF, Disabled
  1795                           ;	Table Read Protect 10000-13FFF
  1796                           ;	EBRT4 = OFF, Disabled
  1797                           ;	Table Read Protect 14000-17FFF
  1798                           ;	EBRT5 = OFF, Disabled
  1799                           ;	Table Read Protect 18000-1BFFF
  1800                           ;	EBRT6 = OFF, Disabled
  1801                           ;	Table Read Protect 1C000-1FFFF
  1802                           ;	EBRT7 = OFF, Disabled
  1803   30000C                     	org	3145740
  1804   30000C  FF                 	db	255
  1805                           
  1806                           ;Config register CONFIG7H @ 0x30000D
  1807                           ;	Table Read Protect Boot
  1808                           ;	EBRTB = OFF, Disabled
  1809   30000D                     	org	3145741
  1810   30000D  40                 	db	64
  1811                           tosu	equ	0xFFF
  1812                           tosh	equ	0xFFE
  1813                           tosl	equ	0xFFD
  1814                           stkptr	equ	0xFFC
  1815                           pclatu	equ	0xFFB
  1816                           pclath	equ	0xFFA
  1817                           pcl	equ	0xFF9
  1818                           tblptru	equ	0xFF8
  1819                           tblptrh	equ	0xFF7
  1820                           tblptrl	equ	0xFF6
  1821                           tablat	equ	0xFF5
  1822                           prodh	equ	0xFF4
  1823                           prodl	equ	0xFF3
  1824                           indf0	equ	0xFEF
  1825                           postinc0	equ	0xFEE
  1826                           postdec0	equ	0xFED
  1827                           preinc0	equ	0xFEC
  1828                           plusw0	equ	0xFEB
  1829                           fsr0h	equ	0xFEA
  1830                           fsr0l	equ	0xFE9
  1831                           wreg	equ	0xFE8
  1832                           indf1	equ	0xFE7
  1833                           postinc1	equ	0xFE6
  1834                           postdec1	equ	0xFE5
  1835                           preinc1	equ	0xFE4
  1836                           plusw1	equ	0xFE3
  1837                           fsr1h	equ	0xFE2
  1838                           fsr1l	equ	0xFE1
  1839                           bsr	equ	0xFE0
  1840                           indf2	equ	0xFDF
  1841                           postinc2	equ	0xFDE
  1842                           postdec2	equ	0xFDD
  1843                           preinc2	equ	0xFDC
  1844                           plusw2	equ	0xFDB
  1845                           fsr2h	equ	0xFDA
  1846                           fsr2l	equ	0xFD9
  1847                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  17
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      7      28
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    ADC_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), ADC_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_ADC_GetConversion
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _ADC_Initialize->_ADC_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     556
                  _ADC_GetConversion
                _ADC_StartConversion
                      _EUSART1_Write
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      98
                                              5 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             3     0      3      98
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       3     0      3      98
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       3     0      3      98
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              3     0      3      98
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0      98
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADC_SetInterruptHandler                              3     0      3      98
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write                                        1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  2     2      0      22
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      22
                                              2 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           2     2      0       0
                                              0 COMRAM     2     2      0
                            _ADC_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ADC_ISR                                              0     0      0       0
                   Absolute function *
        _ADC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _ADC_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _ADC_StartConversion
   _EUSART1_Write
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
     Absolute function(Fake) *
     _ADC_DefaultInterruptHandler *
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      50        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      7      1C       1       29.8%
BITBIGSFRlllh       39      0       0      46        0.0%
BITBIGSFRllhlll     23      0       0      45        0.0%
BITBIGSFRhhhlhh     1A      0       0      37        0.0%
BITBANK15           16      0       0      34        0.0%
BANK15              16      0       0      35        0.0%
BITBIGSFRlhhh       10      0       0      40        0.0%
BITBIGSFRhhhh        D      0       0      36        0.0%
BITBIGSFRlllll       D      0       0      48        0.0%
BITBIGSFRlhl         C      0       0      41        0.0%
BITBIGSFRhhl         B      0       0      39        0.0%
BITBIGSFRllllh       4      0       0      47        0.0%
BITBIGSFRhhhll       2      0       0      38        0.0%
BITBIGSFRllhlhh      1      0       0      43        0.0%
BITBIGSFRllhlhl      1      0       0      44        0.0%
BITBIGSFRllhh        1      0       0      42        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1C      49        0.0%
DATA                 0      0      1C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed May 31 11:12:07 2023

                                            l30 028A                                              l42 01C2  
                                            l27 0256                                              l52 030C  
                                            l70 0316                                              l39 01A2  
                               _timer0ReloadVal 0010                                             l104 0270  
                                           l201 02FE                                             l107 02B4  
                                           l150 010E                                             l244 014E  
                                           l174 028E                                             l270 0188  
                                           l177 02A0                                             l195 02F0  
                                           l292 02D4                                             l198 02E2  
                                           u200 029C                                             u201 0298  
                                           u170 01B0                                             u171 01AC  
                                           u260 0094                                             u261 0090  
                               __end_of_ADC_ISR 0230                 __end_of_ADC_SetInterruptHandler 030E  
                                           tosl 000FFD                                      _TXSTA1bits 000FAC  
                  ?_ADC_DefaultInterruptHandler 0012                                            l1202 0300  
                                          l1210 02C8                                            l1212 0230  
                                          l1204 02E4                                            l1220 0110  
                                          l1300 0268                                            l1214 0244  
                                          l1206 02D6                                            l1230 0144  
                                          l1222 0130                                            l1302 026C  
                                          l1304 028E                                            l1216 0246  
                                          l1208 02F2                                            l1232 0146  
                                          l1224 0136                                            l1240 0150  
                                          l1306 029C                                            l1218 0314  
                                          l1234 014A                                            l1226 013C  
                                          l1250 0174                                            l1242 0152  
                                          l1330 0098                                            l1322 0078  
                                          l1260 00FA                                            l1236 014C  
                                          l1228 013E                                            l1252 0184  
                                          l1244 015A                                            l1332 00A6  
                                          l1324 007C                                            l1270 0288  
                                          l1262 010A                                            l1254 00C6  
                                          l1238 02A2                                            l1246 0170  
                                          l1334 00AC                                            l1326 0084  
                                          l1272 018C                                            l1256 00DA  
                                          l1248 0172                                            l1336 00B2  
                                          l1328 0094                                            l1274 019E  
                                          l1266 0274                                            l1258 00EA  
                                          l1338 00B8                                            l1276 01A0  
                                          l1268 0286                                            l1292 0258  
                                          l1278 01B0                                            l1294 025C  
                                          l1296 0260                                            l1298 0264  
                                          _LATA 000F89                                            _LATB 000F8A  
                                          _LATC 000F8B                                            _LATD 000F8C  
                                          _LATE 000F8D                                            _LATF 000F8E  
                                          _LATG 000F8F                                            _LATH 000F90  
                                          i2l55 0318                                            i2l80 0068  
                                          i2l49 022E                                            i2l81 0068  
                                          i2l75 0036                                   _EUSART1_Write 028C  
                                          _main 0078                                            btemp 001D  
                                          start 0074                                    ___param_bank 000000  
                       __end_of_TMR0_Initialize 018A                  ??_TMR0_DefaultInterruptHandler 0012  
                 __end_of_OSCILLATOR_Initialize 02B6                                           ?_main 0012  
                                         _T0CON 000FD5                                           i2l295 0312  
                                         i2l289 01FC                                           _TMR0H 000FD7  
                                         _TMR0L 000FD6                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                                         _TRISD 000F95                                           _TRISE 000F96  
                                         _TRISF 000F97                                           _TRISG 000F98  
                                         _TRISH 000F99                       ?_TMR0_SetInterruptHandler 0014  
                              __end_of_TMR0_ISR 01FE                                  ?_EUSART1_Write 0012  
                                         pclath 000FFA                                           pclatu 000FFB  
                                         ttemp5 001E                                           ttemp6 0021  
                                         ttemp7 0025                                           status 000FD8  
                                         wtemp8 001E              _EUSART1_DefaultFramingErrorHandler 000000  
                               __initialization 02B6                      __end_of_EUSART1_Initialize 0110  
                                  __end_of_main 00C6                                       ??_ADC_ISR 0012  
                   ?_INTERRUPT_InterruptManager 0012                                          ??_main 0019  
                                 __activetblptr 000003                      ADC_StartConversion@channel 0015  
                                        _ADCON0 000FC2                                          _ADCON1 000FC1  
                                        _ADCON2 000FC0                                          _ADRESH 000FC4  
                                        _ADRESL 000FC3                                          _ANCON0 000F25  
                                        _ANCON1 000F24                                          _ANCON2 000F23  
                                        i2l1310 0020                                          i2l1312 002E  
                                        i2l1074 01FE                                          i2l1314 0044  
                                        i2l1076 0200                                          i2l1316 0052  
                                        i2l1308 0012                                          i2l1078 0214  
                                        i2l1318 0060                                          i2l1264 030E  
                                        i2l1290 01E2                                          i2l1282 01C4  
                                        i2l1284 01C6                                          i2l1286 01CA  
                                        i2l1288 01CE                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                        _SPBRG1 000FAF                                          i2u2_40 0214  
                                        i2u2_41 0210                                          i2u3_48 021A  
                                        i2u3_49 022E                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                        ?_EUSART1_SetErrorHandler 0014  
                              ?_TMR0_Initialize 0012                                          isa$std 000001  
              ??_EUSART1_SetOverrunErrorHandler 0017                 ?_EUSART1_SetOverrunErrorHandler 0014  
                      ADC_GetConversion@channel 0018                                 ??_EUSART1_Write 0014  
      TMR0_SetInterruptHandler@InterruptHandler 0014         ADC_SetInterruptHandler@InterruptHandler 0014  
                             _SYSTEM_Initialize 0258                                      __accesstop 0060  
                       __end_of__initialization 02BE                              ?_SYSTEM_Initialize 0012  
                                 ___rparam_used 000001                                  __pcstackCOMRAM 0012  
                           ??_SYSTEM_Initialize 0019                                       ?_TMR0_ISR 0012  
                     __end_of_SYSTEM_Initialize 0272                                      __pnvCOMRAM 0001  
               __end_of_EUSART1_SetErrorHandler 0300                __end_of_TMR0_SetInterruptHandler 02D6  
                                    ??_TMR0_ISR 0012                                         _ADC_ISR 01FE  
        __end_of_EUSART1_SetFramingErrorHandler 02F2                  _EUSART1_SetFramingErrorHandler 02E4  
                                       _REFOCON 000F2A                                         _OSCCON2 000F64  
                                       i2u21_40 0020                                         i2u21_41 001C  
                                       i2u22_40 002E                                         i2u22_41 002A  
                                       i2u23_40 0044                                         i2u23_41 0040  
                                       i2u24_40 0052                                         i2u24_41 004E  
                                       i2u25_40 0060                                         i2u25_41 005C  
                                       i2u18_40 01E2                                         i2u18_41 01DE  
                                       i2u19_48 01E8                                         i2u19_49 01FC  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FD4  
                          _ADC_InterruptHandler 000D                                         __Hparam 0000  
                       _ADC_SetInterruptHandler 0300                                         __Lparam 0000  
                                       __pcinit 02B6                                         __ramtop 1000  
                                       __ptext0 0078                                         __ptext1 0258  
                                       __ptext2 0150                                         __ptext3 02C8  
                                       __ptext4 0110                                         __ptext5 02A2  
                                       __ptext6 0314                                         __ptext7 00C6  
                                       __ptext8 02D6                                         __ptext9 02E4  
                                     _T0CONbits 000FD5                           _OSCILLATOR_Initialize 02A2  
                            _EUSART1_Initialize 00C6                        ??_PIN_MANAGER_Initialize 0014  
                          end_of_initialization 02BE                             ?_EUSART1_Initialize 0012  
                   _EUSART1_OverrunErrorHandler 0007                            ??_EUSART1_Initialize 0017  
                      _TMR0_SetInterruptHandler 02C8             __end_of_ADC_DefaultInterruptHandler 031A  
                   _ADC_DefaultInterruptHandler 0318                             _ADC_StartConversion 0272  
                           EUSART1_Write@txData 0014                   ??_ADC_DefaultInterruptHandler 0012  
                     ??_ADC_SetInterruptHandler 0017                            ?_ADC_StartConversion 0012  
                  __end_of_INTERRUPT_Initialize 0318                                  _ADC_Initialize 0230  
                        ?_OSCILLATOR_Initialize 0012                             start_initialization 02B6  
                         __end_of_EUSART1_Write 02A2                           ??_ADC_StartConversion 0014  
                        __end_of_ADC_Initialize 0258                                        ?_ADC_ISR 0012  
                                   __pbssCOMRAM 0019                ??_EUSART1_SetFramingErrorHandler 0017  
               ?_EUSART1_SetFramingErrorHandler 0014                           _TMR0_InterruptHandler 0001  
                        _PIN_MANAGER_Initialize 0110                                       __pintcode 0008  
                               ?_ADC_Initialize 0012                    ??_INTERRUPT_InterruptManager 0012  
                                      _BAUDCON1 000F65              _EUSART1_DefaultOverrunErrorHandler 000000  
                          _EUSART1_ErrorHandler 0004                         _EUSART1_SetErrorHandler 02F2  
                          _INTERRUPT_Initialize 0314                               ??_TMR0_Initialize 0017  
       EUSART1_SetErrorHandler@interruptHandler 0014                                       _tmr0_flag 001B  
                                      _PIE1bits 000F9D                      ??_TMR0_SetInterruptHandler 0017  
                                      _PIR1bits 000F9E                                        _RCONbits 000FD0  
                fp__ADC_DefaultInterruptHandler 0000                                        _TMR0_ISR 01C4  
                                    _ADCON0bits 000FC2                           ?_INTERRUPT_Initialize 0012  
                                      __Hrparam 0000                                        __Lrparam 0000  
                             _ADC_GetConversion 018A                         ??_OSCILLATOR_Initialize 0014  
                            ?_ADC_GetConversion 0014                       ??_EUSART1_SetErrorHandler 0017  
                   _EUSART1_DefaultErrorHandler 000000                             ??_ADC_GetConversion 0016  
                                      __ptext10 02F2                                        __ptext11 0230  
                                      __ptext20 0318                                        __ptext12 0300  
                                      __ptext21 0000                                        __ptext13 028C  
                                      __ptext14 0272                                        __ptext15 018A  
                                      __ptext17 01C4                                        __ptext18 030E  
                                      __ptext19 01FE                                        _emg_data 0019  
          __end_of_TMR0_DefaultInterruptHandler 0314                    _TMR0_DefaultInterruptHandler 030E  
                     __end_of_ADC_GetConversion 01C4  EUSART1_SetOverrunErrorHandler@interruptHandler 0014  
                                      isa$xinst 000000                                        int$flags 001D  
            __end_of_INTERRUPT_InterruptManager 0074                      _INTERRUPT_InterruptManager 0008  
                   _EUSART1_FramingErrorHandler 000A                                      _INTCONbits 000FF2  
                        ??_INTERRUPT_Initialize 0014                        ?_ADC_SetInterruptHandler 0014  
                                      intlevel2 0000                     __end_of_ADC_StartConversion 028C  
                       ?_PIN_MANAGER_Initialize 0012          __end_of_EUSART1_SetOverrunErrorHandler 02E4  
                _EUSART1_SetOverrunErrorHandler 02D6                                      _RCSTA1bits 000FAB  
                              ??_ADC_Initialize 0017                 fp__TMR0_DefaultInterruptHandler 0000  
                 ?_TMR0_DefaultInterruptHandler 0012  EUSART1_SetFramingErrorHandler@interruptHandler 0014  
                            _eusart1RxLastError 001C                                 _TMR0_Initialize 0150  
                __end_of_PIN_MANAGER_Initialize 0150  
